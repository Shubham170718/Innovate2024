// Generated by view binder compiler. Do not edit!
package com.defianttech.convertme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.defianttech.convertme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WidgetConvertUnitsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout widgetContainer;

  @NonNull
  public final ImageView widgetSettings;

  @NonNull
  public final FrameLayout widgetUnitContainer;

  @NonNull
  public final TextView widgetUnitFrom;

  @NonNull
  public final TextView widgetUnitFromValue;

  @NonNull
  public final TextView widgetUnitMinus;

  @NonNull
  public final TextView widgetUnitPlus;

  @NonNull
  public final TextView widgetUnitTo;

  @NonNull
  public final TextView widgetUnitToValue;

  private WidgetConvertUnitsBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout widgetContainer, @NonNull ImageView widgetSettings,
      @NonNull FrameLayout widgetUnitContainer, @NonNull TextView widgetUnitFrom,
      @NonNull TextView widgetUnitFromValue, @NonNull TextView widgetUnitMinus,
      @NonNull TextView widgetUnitPlus, @NonNull TextView widgetUnitTo,
      @NonNull TextView widgetUnitToValue) {
    this.rootView = rootView;
    this.widgetContainer = widgetContainer;
    this.widgetSettings = widgetSettings;
    this.widgetUnitContainer = widgetUnitContainer;
    this.widgetUnitFrom = widgetUnitFrom;
    this.widgetUnitFromValue = widgetUnitFromValue;
    this.widgetUnitMinus = widgetUnitMinus;
    this.widgetUnitPlus = widgetUnitPlus;
    this.widgetUnitTo = widgetUnitTo;
    this.widgetUnitToValue = widgetUnitToValue;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WidgetConvertUnitsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WidgetConvertUnitsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.widget_convert_units, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WidgetConvertUnitsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout widgetContainer = (LinearLayout) rootView;

      id = R.id.widget_settings;
      ImageView widgetSettings = ViewBindings.findChildViewById(rootView, id);
      if (widgetSettings == null) {
        break missingId;
      }

      id = R.id.widget_unit_container;
      FrameLayout widgetUnitContainer = ViewBindings.findChildViewById(rootView, id);
      if (widgetUnitContainer == null) {
        break missingId;
      }

      id = R.id.widget_unit_from;
      TextView widgetUnitFrom = ViewBindings.findChildViewById(rootView, id);
      if (widgetUnitFrom == null) {
        break missingId;
      }

      id = R.id.widget_unit_from_value;
      TextView widgetUnitFromValue = ViewBindings.findChildViewById(rootView, id);
      if (widgetUnitFromValue == null) {
        break missingId;
      }

      id = R.id.widget_unit_minus;
      TextView widgetUnitMinus = ViewBindings.findChildViewById(rootView, id);
      if (widgetUnitMinus == null) {
        break missingId;
      }

      id = R.id.widget_unit_plus;
      TextView widgetUnitPlus = ViewBindings.findChildViewById(rootView, id);
      if (widgetUnitPlus == null) {
        break missingId;
      }

      id = R.id.widget_unit_to;
      TextView widgetUnitTo = ViewBindings.findChildViewById(rootView, id);
      if (widgetUnitTo == null) {
        break missingId;
      }

      id = R.id.widget_unit_to_value;
      TextView widgetUnitToValue = ViewBindings.findChildViewById(rootView, id);
      if (widgetUnitToValue == null) {
        break missingId;
      }

      return new WidgetConvertUnitsBinding((LinearLayout) rootView, widgetContainer, widgetSettings,
          widgetUnitContainer, widgetUnitFrom, widgetUnitFromValue, widgetUnitMinus, widgetUnitPlus,
          widgetUnitTo, widgetUnitToValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
