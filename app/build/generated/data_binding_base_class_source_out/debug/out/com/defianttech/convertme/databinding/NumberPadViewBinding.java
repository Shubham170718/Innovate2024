// Generated by view binder compiler. Do not edit!
package com.defianttech.convertme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.defianttech.convertme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NumberPadViewBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final TextView btn0;

  @NonNull
  public final TextView btn1;

  @NonNull
  public final TextView btn2;

  @NonNull
  public final TextView btn3;

  @NonNull
  public final TextView btn4;

  @NonNull
  public final TextView btn5;

  @NonNull
  public final TextView btn6;

  @NonNull
  public final TextView btn7;

  @NonNull
  public final TextView btn8;

  @NonNull
  public final TextView btn9;

  @NonNull
  public final TextView btnBackspace;

  @NonNull
  public final TextView btnClear;

  @NonNull
  public final TextView btnDecimal;

  @NonNull
  public final TextView btnNegative;

  private NumberPadViewBinding(@NonNull View rootView, @NonNull TextView btn0,
      @NonNull TextView btn1, @NonNull TextView btn2, @NonNull TextView btn3,
      @NonNull TextView btn4, @NonNull TextView btn5, @NonNull TextView btn6,
      @NonNull TextView btn7, @NonNull TextView btn8, @NonNull TextView btn9,
      @NonNull TextView btnBackspace, @NonNull TextView btnClear, @NonNull TextView btnDecimal,
      @NonNull TextView btnNegative) {
    this.rootView = rootView;
    this.btn0 = btn0;
    this.btn1 = btn1;
    this.btn2 = btn2;
    this.btn3 = btn3;
    this.btn4 = btn4;
    this.btn5 = btn5;
    this.btn6 = btn6;
    this.btn7 = btn7;
    this.btn8 = btn8;
    this.btn9 = btn9;
    this.btnBackspace = btnBackspace;
    this.btnClear = btnClear;
    this.btnDecimal = btnDecimal;
    this.btnNegative = btnNegative;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static NumberPadViewBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.number_pad_view, parent);
    return bind(parent);
  }

  @NonNull
  public static NumberPadViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn0;
      TextView btn0 = ViewBindings.findChildViewById(rootView, id);
      if (btn0 == null) {
        break missingId;
      }

      id = R.id.btn1;
      TextView btn1 = ViewBindings.findChildViewById(rootView, id);
      if (btn1 == null) {
        break missingId;
      }

      id = R.id.btn2;
      TextView btn2 = ViewBindings.findChildViewById(rootView, id);
      if (btn2 == null) {
        break missingId;
      }

      id = R.id.btn3;
      TextView btn3 = ViewBindings.findChildViewById(rootView, id);
      if (btn3 == null) {
        break missingId;
      }

      id = R.id.btn4;
      TextView btn4 = ViewBindings.findChildViewById(rootView, id);
      if (btn4 == null) {
        break missingId;
      }

      id = R.id.btn5;
      TextView btn5 = ViewBindings.findChildViewById(rootView, id);
      if (btn5 == null) {
        break missingId;
      }

      id = R.id.btn6;
      TextView btn6 = ViewBindings.findChildViewById(rootView, id);
      if (btn6 == null) {
        break missingId;
      }

      id = R.id.btn7;
      TextView btn7 = ViewBindings.findChildViewById(rootView, id);
      if (btn7 == null) {
        break missingId;
      }

      id = R.id.btn8;
      TextView btn8 = ViewBindings.findChildViewById(rootView, id);
      if (btn8 == null) {
        break missingId;
      }

      id = R.id.btn9;
      TextView btn9 = ViewBindings.findChildViewById(rootView, id);
      if (btn9 == null) {
        break missingId;
      }

      id = R.id.btnBackspace;
      TextView btnBackspace = ViewBindings.findChildViewById(rootView, id);
      if (btnBackspace == null) {
        break missingId;
      }

      id = R.id.btnClear;
      TextView btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btnDecimal;
      TextView btnDecimal = ViewBindings.findChildViewById(rootView, id);
      if (btnDecimal == null) {
        break missingId;
      }

      id = R.id.btnNegative;
      TextView btnNegative = ViewBindings.findChildViewById(rootView, id);
      if (btnNegative == null) {
        break missingId;
      }

      return new NumberPadViewBinding(rootView, btn0, btn1, btn2, btn3, btn4, btn5, btn6, btn7,
          btn8, btn9, btnBackspace, btnClear, btnDecimal, btnNegative);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
