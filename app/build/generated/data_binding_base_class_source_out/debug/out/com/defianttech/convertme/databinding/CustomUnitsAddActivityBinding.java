// Generated by view binder compiler. Do not edit!
package com.defianttech.convertme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.defianttech.convertme.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomUnitsAddActivityBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button addButton;

  @NonNull
  public final ImageView invertButton;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final Spinner unitBaseSpinner;

  @NonNull
  public final LinearLayout unitCategoryContainer;

  @NonNull
  public final Spinner unitCategorySpinner;

  @NonNull
  public final TextInputLayout unitMultiplierInput;

  @NonNull
  public final TextInputEditText unitMultiplierText;

  @NonNull
  public final TextInputLayout unitNameInput;

  @NonNull
  public final TextInputEditText unitNameText;

  @NonNull
  public final TextView unitPreviewLabel;

  @NonNull
  public final TextView unitPreviewText;

  private CustomUnitsAddActivityBinding(@NonNull FrameLayout rootView, @NonNull Button addButton,
      @NonNull ImageView invertButton, @NonNull MaterialToolbar toolbar,
      @NonNull Spinner unitBaseSpinner, @NonNull LinearLayout unitCategoryContainer,
      @NonNull Spinner unitCategorySpinner, @NonNull TextInputLayout unitMultiplierInput,
      @NonNull TextInputEditText unitMultiplierText, @NonNull TextInputLayout unitNameInput,
      @NonNull TextInputEditText unitNameText, @NonNull TextView unitPreviewLabel,
      @NonNull TextView unitPreviewText) {
    this.rootView = rootView;
    this.addButton = addButton;
    this.invertButton = invertButton;
    this.toolbar = toolbar;
    this.unitBaseSpinner = unitBaseSpinner;
    this.unitCategoryContainer = unitCategoryContainer;
    this.unitCategorySpinner = unitCategorySpinner;
    this.unitMultiplierInput = unitMultiplierInput;
    this.unitMultiplierText = unitMultiplierText;
    this.unitNameInput = unitNameInput;
    this.unitNameText = unitNameText;
    this.unitPreviewLabel = unitPreviewLabel;
    this.unitPreviewText = unitPreviewText;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomUnitsAddActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomUnitsAddActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_units_add_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomUnitsAddActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_button;
      Button addButton = ViewBindings.findChildViewById(rootView, id);
      if (addButton == null) {
        break missingId;
      }

      id = R.id.invert_button;
      ImageView invertButton = ViewBindings.findChildViewById(rootView, id);
      if (invertButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.unit_base_spinner;
      Spinner unitBaseSpinner = ViewBindings.findChildViewById(rootView, id);
      if (unitBaseSpinner == null) {
        break missingId;
      }

      id = R.id.unit_category_container;
      LinearLayout unitCategoryContainer = ViewBindings.findChildViewById(rootView, id);
      if (unitCategoryContainer == null) {
        break missingId;
      }

      id = R.id.unit_category_spinner;
      Spinner unitCategorySpinner = ViewBindings.findChildViewById(rootView, id);
      if (unitCategorySpinner == null) {
        break missingId;
      }

      id = R.id.unit_multiplier_input;
      TextInputLayout unitMultiplierInput = ViewBindings.findChildViewById(rootView, id);
      if (unitMultiplierInput == null) {
        break missingId;
      }

      id = R.id.unit_multiplier_text;
      TextInputEditText unitMultiplierText = ViewBindings.findChildViewById(rootView, id);
      if (unitMultiplierText == null) {
        break missingId;
      }

      id = R.id.unit_name_input;
      TextInputLayout unitNameInput = ViewBindings.findChildViewById(rootView, id);
      if (unitNameInput == null) {
        break missingId;
      }

      id = R.id.unit_name_text;
      TextInputEditText unitNameText = ViewBindings.findChildViewById(rootView, id);
      if (unitNameText == null) {
        break missingId;
      }

      id = R.id.unit_preview_label;
      TextView unitPreviewLabel = ViewBindings.findChildViewById(rootView, id);
      if (unitPreviewLabel == null) {
        break missingId;
      }

      id = R.id.unit_preview_text;
      TextView unitPreviewText = ViewBindings.findChildViewById(rootView, id);
      if (unitPreviewText == null) {
        break missingId;
      }

      return new CustomUnitsAddActivityBinding((FrameLayout) rootView, addButton, invertButton,
          toolbar, unitBaseSpinner, unitCategoryContainer, unitCategorySpinner, unitMultiplierInput,
          unitMultiplierText, unitNameInput, unitNameText, unitPreviewLabel, unitPreviewText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
